name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'New version'
        required: true
    
jobs:
  build:
    if: github.repository == 'asasine/factoriod'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x

    - name: Update project version
      uses: vers-one/dotnet-project-version-updater@v1.3
      with:
        version: ${{ inputs.version }}
        file: src/Factoriod.Daemon/Factoriod.Daemon.csproj
    - name: Stage updated project version
      run: git add src/*.csproj

    - name: Create debian package
      run: |
        dotnet tool restore
        dotnet tool run dotnet-deb install
        dotnet tool run dotnet-deb -c Release src/Factoriod.Daemon/Factoriod.Daemon.csproj
        cp src/Factoriod.Daemon/bin/Release/net6.0/factoriod.*.deb docs/

    - name: Import GPG key
      uses: crazy-max/ghaction-import-gpg@v5
      with:
        gpg_private_key: ${{ secrets.GPG_SIGNING_KEY }}
        passphrase: ${{ secrets.GPG_SIGNING_KEY_PASSWORD }}
        git_user_signingkey: true
        git_commit_gpgsign: true

    - name: Update packages and sign
      working-directory: docs
      run: |
        dpkg-scanpackages --multiversion . > Packages && gzip -k -f Packages
        apt-ftparchive release . > Release
        gpg --batch --yes --armor --detach-sign --output Release.gpg Release
        gpg --batch --yes --clearsign --output InRelease Release
        git add .

    - name: Commit and push changes
      run: |
        git commit -m "Updated packages to ${{ inputs.version }}"
        git push

    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        name: v${{ inputs.version }}
        tag_name: v${{ inputs.version }}
        draft: true
        generate_release_notes: true
